#include<vector>

int getLongestZeroSumSubarrayLength(vector<int> &arr){
	// Write your code here.
	int n = arr.size();
	int prefixSum = 0;
	int ans = 0;
	unordered_map<int, int> mp;   // create a map to store the sum in the map
	for(int i = 0; i < n; i++){
		prefixSum += arr[i];
		if(prefixSum == 0){  // condition meet update answer
			ans = i + 1;
		}
		else{
			// if the value already exist in map
			// maximise ans
			if(mp.find(prefixSum)!= mp.end()){
				ans = max(ans, i - mp[prefixSum]);
			}
			// map the new sum encountered 
			else{
                mp[prefixSum] = i;
			}
		}
	}
	return ans;
}
