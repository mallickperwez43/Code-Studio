#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

LinkedListNode<int> * deleteNodes(LinkedListNode<int> * head) {
    // If head is NULL, return NULL as there is no list to process
    if(head == NULL)
        return head;

    // Initialize temporary pointers to traverse the list
    LinkedListNode<int> *temp = head;
    LinkedListNode<int> *cur = head;

    // Traverse the list until the second last node
    while(temp -> next != NULL){
        // Check if the next node has greater data than the current node
        if(temp ->  next -> data > temp -> data){
            // Copy the data of the next node to the current node
            temp -> data = temp -> next -> data;

            // Update the link of the current node to skip the next node
            temp -> next = temp -> next -> next;

            // Reset the temporary pointer to the current node
            temp = cur;
        }
        else{
            // If the next node doesn't have greater data, move to the next node
            temp = temp -> next;
        }
    }
    // Return the head of the modified list
    return head;
}
