/****************************************************************

    Following is the class structure of the Node class:

    class Node
    {
    public:
        int data;
        Node *next;
        Node()
        {
            this->data = 0;
            next = NULL;
        }
        Node(int data)
        {
            this->data = data;
            this->next = NULL;
        }
        Node(int data, Node* next)
        {
            this->data = data;
            this->next = next;
        }
    };

*****************************************************************/
Node* getMid(Node* head){
    Node* slow = head;
    Node* fast = head -> next;

    while(fast != NULL and fast -> next != NULL){
        fast = fast -> next -> next;
        slow = slow -> next;
    }
    return slow;
}

Node* reverseLL(Node* head){
    Node* ahead = NULL;
    Node* cur = head;
    Node* prev = NULL;

    while(cur != NULL){
        ahead = cur -> next;
        cur -> next = prev;
        prev = cur;
        cur = ahead;
    }
    return prev;
}

bool isPalindrome(Node *head)
{
    // write your code here
    if(head == NULL or head -> next == NULL)
        return true;

    // step 1 get middle
    Node* middle = getMid(head);

    // step 2 reverse the LL from the next of mid
    Node* temp = middle -> next;
    middle -> next = reverseLL(temp);

    // step 3 compare the two halfs 
    Node* firstHalf = head;
    Node* secondHalf = middle -> next;

    while(secondHalf != NULL){
        if(firstHalf -> data != secondHalf -> data)
            return false;

        firstHalf = firstHalf -> next;
        secondHalf = secondHalf -> next;
    }

    // step 4 reverse the secondHalf again 
    temp = middle -> next;
    reverseLL(temp);

    return true;
}
